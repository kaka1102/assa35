@using DataContext
@using DataContext.Constants
@using DataContext.Until
@if (Model == null)
{
    <p>@(ASS_35.Resources.HomeText.No_data)</p>
}
else
{
    var model = (m_thongbao)Model;
    <div class="white-box">
        <div class="col-sm-6" style="float: right">
            <h3 id="btn-cancel" class="box-title m-b-0" style="float: right; cursor: pointer;">
                <i class="ti-arrow-left" style="padding-right: 10px"></i><a>@(ASS_35.Resources.HomeText.ButtonBack)</a>
            </h3>
        </div>
        <div class="form-group text-left">
            <label class="control-label">@(ASS_35.Resources.HomeText.Notice_Name) <span style="color: red;">*</span></label>
            <input @(StatusUntil.CheckAuthor(model.idnguoitao, model.trangthai) ? "disabled" : "") type="text" class="form-control" id="txt-venue-name" placeholder="@(ASS_35.Resources.HomeText.Notice_Name) " value="@(model.tenthongbao)">
        </div>
        <div class="form-group text-left">
            <label class="control-label">@(ASS_35.Resources.HomeText.Content)  <span style="color: red;">*</span></label>
            <textarea @(StatusUntil.CheckAuthor(model.idnguoitao, model.trangthai) ? "disabled" : "") name="noidung" class="form-control" rows="5" id="txt-venue-contents">@(model.noidung)</textarea>
        </div>
        @if (model.idnguoitao == AccountUntil.GetAccount().id)
        {
            <div class="form-group text-left">
                <label class="control-label">@(ASS_35.Resources.HomeText.Note) </label>
                <textarea @(StatusUntil.CheckAuthor(model.idnguoitao, model.trangthai) ? "disabled" : "") id="txt-venue-note" class="form-control" rows="5">@(model.ghichu)</textarea>
            </div>
        }
        <div class="form-group text-left" style="display: none;">
            <label class="control-label">@(ASS_35.Resources.HomeText.Version)  <span style="color: red;">*</span></label>
            <select class="form-control" id="cbx-venue-language" @(!StatusUntil.CheckChooseLanguage(model.trangthai.Value) ? "disabled" : "")>
                <option value="1" @(model.phienban == SystemMessageConst.LanguageVersion.Vietnam ? "selected='selected'" : "")>@(ASS_35.Resources.HomeText.TV) </option>
                <option value="2" @(model.phienban != SystemMessageConst.LanguageVersion.Vietnam ? "selected='selected'" : "")>@(ASS_35.Resources.HomeText.TA) </option>
            </select>
        </div>
        @if (!StatusUntil.CheckAuthor(model.idnguoitao, model.trangthai))
        {
            <div class="form-group text-left">
                <label class="col-sm-12">@(ASS_35.Resources.HomeText.Upload_document_file) </label>
                <div class="col-sm-6">
                    <div class="fileinput fileinput-new input-group" id="item-append-error">
                        <div class="form-control" id="frmInput">
                        </div>
                        <span class="input-group-addon btn btn-default btn-file">
                            <span class="fileinput-new">@(ASS_35.Resources.HomeText.Select_file)</span>
                            <input type="hidden"><input type="file" name="..." multiple="" id="btn-venue-file" accept="application/pdf">
                        </span>
                        <span id="appendInput">

                        </span>
                    </div>
                </div>
                <div id="gallaryFileOther">
                    <ul class="feeds" id="view-item-file"></ul>
                </div>
            </div>
        }
        <div class="form-group">
            <label class="col-sm-12">@(ASS_35.Resources.HomeText.File_upload)</label>
            <div class="col-lg-10" id="table-container" style="margin: auto;">
                @Html.Action("ListFileByNotifiId", "NotificationManager", new { id = model.id, status = model.trangthai, idAuthor = model.idnguoitao })
            </div>
        </div>
        <div class="form-group text-left">
            <label class="control-label">@(ASS_35.Resources.HomeText.Account_to_be_notified)<span style="color: red;">*</span></label>
            <select class="form-control" id="cbx-target-person" @(StatusUntil.CheckAuthor(model.idnguoitao, model.trangthai) ? "disabled" : "")>
                <option value="-1" @(model.target == -1 ? "selected" : "")>@(ASS_35.Resources.HomeText.All)</option>
                <option value="-2" @(model.target == -2 ? "selected" : "")>@(ASS_35.Resources.HomeText.All_reporters)</option>
                <option value="-3" @(model.target == -3 ? "selected" : "")>@(ASS_35.Resources.HomeText.All_delegates)</option>
                <option value="0" @(model.target == 0 ? "selected" : "")>@(ASS_35.Resources.HomeText.Option)</option>
            </select>
        </div>

        <div class="form-group" id="person-container" style="@(model.target == 0 ? "" : "display: none;")">
            <div class="row">
                @Html.Action("ListReAndDe", "Common", new { idNotifica = model.id, isDisable = StatusUntil.CheckAuthor(model.idnguoitao, model.trangthai) })
            </div>
        </div>
        @Html.Action("ListSaveButton", "Common", new { status = model.trangthai, authorId = model.idnguoitao, isNotifi = true })
    </div>
    <script>
        $(function() {
            var files = [];
            BindButtonSaveClick(files);
            BindButtonCancelClick();
            BindButtonChooseFileChange(files);
            BindButtonComboboxTargetChange();
        });

        function BindButtonChooseFileChange(files) {
            $("#btn-venue-file").change(function() {
                var file = $("#btn-venue-file")[0].files;
                for (var i = 0; i < file.length; i++) {
                    BuildFileItemLayout(file[i], files.length);
                    files.push(file[i]);
                }
            });
        }

        function BindButtonCancelClick() {
            $("#btn-cancel").click(function() {
                LoadPage('@Url.Action("ListNotification", "NotificationManager")');
            });
        }

        function AddResult(data) {
            if (data.result.IsSuccess === false) {
                QTW_RUN_MESS.alter_Message_Error(data.result.Message);
            } else {
                QTW_RUN_MESS.alter_Message_Success(data.result.Message);
                LoadPartialView('/NotificationManager/ListFileByNotifiId/' + @(model.id) + '?status=' + @(model.trangthai) + '&idAuthor=' + @(model.idnguoitao), "#table-container");
            }
        }

        function BindButtonSaveClick(files) {
            $(".btn-save").click(function () {
                var venueId = "@ViewBag.id";
                var venueContents = $("#txt-venue-contents").val();
                var venueName = $("#txt-venue-name").val();
                var venueNote = $("#txt-venue-note").val();
                var venueLanguage = $("#cbx-venue-language").val();
                var venueStatus = $(this).attr("data-type");
                var adminStatus = $('input[name=radio]:checked').val();
                var venueTarget = $("#cbx-target-person").val();
                var venueReason = $("#txt-reason").val();
                var listVenueTarget = "";
                if (venueTarget === "0") {
                    $(".person-item").each(function() {
                        if ($(this).prop('checked')) {
                            listVenueTarget += $(this).val() + ",";
                        }
                    });
                } else {
                    listVenueTarget = venueTarget;
                }
                var infomationData = {
                    venueId: venueId,
                    venueName: venueName,
                    venueContents: venueContents,
                    venueNote: venueNote,
                    venueLanguage: venueLanguage,
                    venueTarget: listVenueTarget,
                    venueStatus: venueStatus,
                    adminStatus: adminStatus,
                    venueReason: venueReason
                }

                var formData = new FormData();
                formData.append("infomationData", JSON.stringify(infomationData));
                $('.btnRemoveItems').each(function() {
                    formData.append("venueFile", files[$(this).attr("data-index")]);
                });
                QTW_JQUERY.RUN_AJAX("ajaxPOST", "/NotificationManager/_EditNotification", formData, AddResult);
                $("#view-item-file").empty();
                files = [];
            });
        };

        function BindButtonChooseFileChange(files) {
            $("#btn-venue-file").change(function() {
                var file = $("#btn-venue-file")[0].files;
                for (var i = 0; i < file.length; i++) {
                    BuildFileItemLayout(file[i], files.length);
                    files.push(file[i]);
                }
            });
        }

        function BuildFileItemLayout(file, index) {
            var icon = "fa fa-file-pdf-o";
            var container = $("<li  style='position: relative;'></li>");
            container.append("<div style='width: 90%;' class='li-item-file li-file model_img img-responsive'>\
                                            <div class='bg-purple' style='width: 40px;float: left;'>\
                                                 <i class='" +
                icon +
                " text-white'></i>\
                                            </div>\
                                            <div style='float: left;padding: 10px;width: 70%;'>\
                                                <span style='float:left'>" +
                file.name +
                "</span></div><div style='float: right;padding: 10px;width: 20%;'><span style='padding-right:50px' class='text-muted'>" +
                file.size +
                " bytes</span><button type='button' data-index='" +
                index +
                "' aria-label='@Html.Raw((ASS_35.Resources.HomeText.Delete))' class='btn btn-danger btn-circle hint--top btnRemoveItems' style='position: absolute;top: 15px;right: 15px;display: none;'><i class='fa fa-times'></i></button>");

            $('#view-item-file').append(container);
            container.find('.btnRemoveItems').click(function() {
                container.remove();
            });
        }

        function BindButtonComboboxTargetChange() {
            $("#cbx-target-person").change(function() {
                if ($(this).val() === "0") {
                    $("#person-container").css("display", "block");
                } else {
                    $("#person-container").css("display", "none");
                }
            });
        }
    </script>
}